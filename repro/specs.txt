QA Tools Specs
===============

Overview
------
Get domain info for qa
AC scripts
Entity scripts
Interface scripts

Public URL
https://raw.githubusercontent.com/ozanserim/ozanserim.github.io/master/repro/repro.js

HF Content Primitives
---------------------
Avatar
Entity
Props
Environment
Lights
Animation
Domain
Coordinates
Scripts


Use case
-----------

- User encounters bug
- User initiates a bug report (qa snapshot)
- HF displays a the current domain info (avatar, domain, etc.)
- HF displays an area for the user to enter free-form text.
- The user enters text and sends the report to HF.

System UC
-----------
- User starts repro.js
- repro.js gets repro info from HF.
- repro.js displays repro.html in HF.
- repro.js initiates a connection with reprohandler.js
- repro.js sends repro info to reprohandler.js
- reprohandler.js updates repro.html
- user adds addition text info and clicks send.
- reprohandler.js send the info to either the disk, to github or to asana (TBD).




Samples
--------

Avatar
var myPosition = MyAvatar.position;

Entities
var properties = {
                type: "Box",
                position: {x: x, y: y, z: z},
                color: {red: color, green: color, blue: 255},
                dimensions: {x: 1, y: 1, z: 1},
            };
            floor = Entities.addEntity(properties);

Flow
function checkeredFloor (){
                     .....
                     Script.stop();
                 }
                 checkeredFloor();


Create web entity

var url = Script.resolvePath('html/entityProperties.html');
var webView = new WebWindow('Entity Properties', url, 200, 280, true);

***
[02/25 15:10:26] [DEBUG] Created web entity  QUuid("{d894395d-8f39-40b7-86d8-925a59f4f929}")
[02/25 15:10:26] [DEBUG] Setting web entity source URL to  "https://highfidelity.com/"


no info about webView

find

currentAPI

for (var p in MyAvatar) print(p)


JSON.stringify JSON.parse

JSON.stringify(Scene)
{"objectName":"","shouldRenderAvatars":true,"shouldRenderEntities":true,"stage":{"objectName":"","location":{"objectName":"","longitude":122.40699768066406,"latitude":37.777000427246094,"altitude":0.029999999329447746},"time":{"objectName":"","hour":12,"day":60},"keyLight":{"objectName":"","color":{"x":1,"y":1,"z":1},"intensity":1,"ambientIntensity":1,"direction":{"x":0,"y":-0.7071068286895752,"z":0.7071068286895752}},"sunModel":false,"backgroundMode":"skybox"}}

Entities.dumpTree()
findEntitiesInBox(glm::vec3,glm::vec3)
findEntitiesInBox(glm::vec3,float)

MyAvatar.skeletonModelURL
http://..../.fst

location.href
hifi://ozan/2.01026e-05,0.540076,-0.000571175/-4.939e-05,0.295829,0.00015944,0.955241

snapshot
SnapshotShareDialog_QMLTYPE_234::uploadSnapshot(const QString& snapshot)

Google's Report a Bug tool
http://stackoverflow.com/questions/4912092/using-html5-canvas-javascript-to-take-screenshots


var window = new OverlayWebWindow(â€¦);
window.eventBridge.emitScriptEvent(JSON.stringify(DATA_TO_SEND));

EventBridge.scriptEventReceived.connect(function(dataString) {
    var data = JSON.parse(dataString);
  });

[02/27 16:43:24] [WARNING] WebWindow views are deprecated. Use OverlayWebWindow instead
___________________

function initialize() {
        toolBar = new ToolBar(0, 0, ToolBar.VERTICAL, "highfidelity.edit.toolbar", function(windowDimensions, toolbar) {
            return {
                x: windowDimensions.x - 8 - toolbar.width,
                y: (windowDimensions.y - toolbar.height) / 2
            };
        });

__________________

print("Model selected: " + foundEntity);
____________________

selectionDisplay.select(selectedEntityID, event);
______________________
Window.alert(INSUFFICIENT_PERMISSIONS_ERROR_MSG);
_________________________



=================
or

function loaded() {
            openEventBridge(function () {
                if (window.EventBridge !== undefined) {
                    EventBridge.scriptEventReceived.connect(function (data) {
                        var testdata = JSON.parse(data);
                        var usersection = document.getElementById("usersection");
                        usersection.innerHTML = testdata;
                    });
                }
            });
        }

  ---------------

  MODEL PROPERTIES IN EDITPROPERTIES.HTML

  <div class="model-section property">
          <div class="label">Model URL</div>
          <div class="value">
              <input type="text" id="property-model-url" class="url"></input>
          </div>
      </div>
      <div class="model-section property">
          <div class="label">Collision Model URL</div>
          <div class="value">
              <input type="text" id="property-collision-model-url" class="url"></input>
          </div>
      </div>
      <div class="model-section property">
          <div class="label">Animation URL</div>
          <div class="value">
              <input type="text" id="property-model-animation-url" class="url"></input>
          </div>
      </div>



      ____________________


      Log




